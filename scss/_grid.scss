@use "sass:math";

$grid-colunms: 48;
$grid-gaps:(
    '0': 0,
    '1': 10px,
    '2': 20px,
    '3': 30px,
);

//base layout class
.container {
    width: 84vw;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

//grid gaps
@each $key, $val in $grid-gaps{
    .gap-#{$key} > * {
        padding: $val;
    }
}

//col class

@include xs {
    @for $i from 1 through $grid-colunms {
        .col-xs-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colunms);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-colunms {
        .col-sm-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colunms);
        }
    }
}

@include md {
    @for $i from 1 through $grid-colunms {
        .col-md-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colunms);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-colunms {
        .col-lg-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colunms);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-colunms {
        .col-xl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colunms);
        }
    }
}
